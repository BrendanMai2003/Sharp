[{"C:\\Users\\t\\Sharp\\src\\index.js":"1","C:\\Users\\t\\Sharp\\src\\reportWebVitals.js":"2","C:\\Users\\t\\Sharp\\src\\App.js":"3","C:\\Users\\t\\Sharp\\src\\components\\Login.js":"4","C:\\Users\\t\\Sharp\\src\\components\\Home.js":"5","C:\\Users\\t\\Sharp\\src\\components\\Navbar.js":"6","C:\\Users\\t\\Sharp\\src\\components\\Feed.js":"7","C:\\Users\\t\\Sharp\\src\\components\\Landing.js":"8","C:\\Users\\t\\Sharp\\src\\components\\Card.js":"9","C:\\Users\\t\\Sharp\\src\\components\\Posts.js":"10","C:\\Users\\t\\Sharp\\src\\components\\VideoTable.js":"11","C:\\Users\\t\\Sharp\\src\\components\\Break.js":"12","C:\\Users\\t\\Sharp\\src\\components\\Post.js":"13","C:\\Users\\t\\Sharp\\src\\components\\VideoModal.js":"14","C:\\Users\\t\\Sharp\\src\\components\\NotesModal.js":"15"},{"size":500,"mtime":1635082249562,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1635082249577,"results":"18","hashOfConfig":"17"},{"size":3099,"mtime":1635082249536,"results":"19","hashOfConfig":"17"},{"size":1854,"mtime":1635082249655,"results":"20","hashOfConfig":"17"},{"size":4601,"mtime":1635082249638,"results":"21","hashOfConfig":"17"},{"size":4114,"mtime":1635082249662,"results":"22","hashOfConfig":"17"},{"size":12690,"mtime":1636291828539,"results":"23","hashOfConfig":"17"},{"size":16170,"mtime":1635082249647,"results":"24","hashOfConfig":"17"},{"size":317,"mtime":1635082249613,"results":"25","hashOfConfig":"17"},{"size":1336,"mtime":1635082249685,"results":"26","hashOfConfig":"17"},{"size":7505,"mtime":1635082249702,"results":"27","hashOfConfig":"17"},{"size":126,"mtime":1635082249606,"results":"28","hashOfConfig":"17"},{"size":2850,"mtime":1635082249678,"results":"29","hashOfConfig":"17"},{"size":1521,"mtime":1635082249693,"results":"30","hashOfConfig":"17"},{"size":1290,"mtime":1635082249669,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4794a4",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\t\\Sharp\\src\\index.js",[],"C:\\Users\\t\\Sharp\\src\\reportWebVitals.js",[],"C:\\Users\\t\\Sharp\\src\\App.js",["70","71","72","73","74"],"import firebase from \"firebase\";\nimport { useState, useEffect } from \"react\";\nimport { Home } from \"./components/Home\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { ChakraProvider, useFocusOnHide } from \"@chakra-ui/react\";\nimport { Login } from \"./components/Login\";\nimport { Feed } from \"./components/Feed\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Landing } from \"./components/Landing\";\nimport 'lion-player/dist/lion-skin.min.css';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDzEoXNrNgu3Q3GV1aI4s2X75lF50jt_zI\",\n  authDomain: \"fir-auth-tutorial-a425c.firebaseapp.com\",\n});\n\nfunction App() {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => false,\n    },\n  };\n\n  let history = useHistory();\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setIsSignedIn(!!user);\n    });\n  });\n\n  if (isSignedIn === true) {\n    return (\n        <ChakraProvider>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <ChakraProvider>\n                  <Landing isSignedIn={isSignedIn}/>\n                </ChakraProvider>\n              </Route>\n              <Route exact path=\"/videos\">\n                <Feed />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Home />\n              </Route>\n            </Switch>\n          </Router>\n        </ChakraProvider>\n    );\n  } else {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <ChakraProvider>\n              <Landing isSignedIn={isSignedIn}/>\n            </ChakraProvider>\n          </Route>\n          <Route exact path=\"/login\">\n            <ChakraProvider>\n              <Login />\n            </ChakraProvider>\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n//   return (\n//     <>\n//       <ChakraProvider>\n//         {isSignedIn ? (\n//           <div className=\"\">\n//             <Router>\n//               <Switch>\n//                 <Route exact path=\"/feed\">\n//                   <Feed />\n//                 </Route>\n//                 <Route exact path=\"/profile\">\n//                   <Home />\n//                 </Route>\n//               </Switch>\n//             </Router>\n//           </div>\n//         ) : (\n//           <Router>\n//             <Switch>\n//               <Route exact path=\"/login\">\n//                 <br />\n//                 <br />\n//                 <ChakraProvider>\n//                   <Login />\n//                 </ChakraProvider>\n//                 <br />\n//               </Route>\n//             </Switch>\n//           </Router>\n//         )}\n//       </ChakraProvider>\n//     </>\n//   );\n// }\n\nexport default App;\n","C:\\Users\\t\\Sharp\\src\\components\\Login.js",["75","76"],"import {\n  Box,\n  Heading,\n  SimpleGrid,\n  useColorModeValue,\n  Text,\n  chakra\n} from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport firebase from \"firebase\";\nimport { Card } from \"./Card\";\nimport { useHistory } from \"react-router-dom\";\n\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\n\nexport const Login = () => {\n  let history = useHistory();\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => true,\n    },\n    signInSuccessUrl: \"/videos\",\n  };\n  return (\n    <Box\n      bg={useColorModeValue(\"gray.50\", \"inherit\")}\n      minH=\"100vh\"\n      py=\"12\"\n      px={{\n        base: \"4\",\n        lg: \"8\",\n      }}\n      bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n    >\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <Box maxW=\"md\" mx=\"auto\">\n        <Heading\n          textAlign=\"center\"\n          size=\"3xl\"\n          fontWeight=\"extrabold\"\n          color=\"twitter.100\"\n        >\n          DeepEducation\n        </Heading>\n        <br />\n        <Card rounded=\"xl\">\n          <Text\n            textAlign=\"center\"\n            bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n            bgClip=\"text\"\n            fontWeight=\"bold\"\n            fontSize=\"lg\"\n          >\n            Sign In to Your Account\n          </Text>\n          <SimpleGrid mt=\"6\" columns={1} spacing=\"3\">\n            <StyledFirebaseAuth\n              uiConfig={uiConfig}\n              firebaseAuth={firebase.auth()}\n            />\n          </SimpleGrid>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n","C:\\Users\\t\\Sharp\\src\\components\\Home.js",["77","78","79","80","81","82","83","84","85","86","87","88","89","90","91"],"import firebase from \"firebase\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  Box,\n  Heading,\n  useColorModeValue,\n  Text,\n  Textarea,\n  Button,\n  Center,\n  Input,\n  Select,\n} from \"@chakra-ui/react\";\nimport { Card } from \"./Card\";\nimport * as React from \"react\";\nimport { Posts } from \"./Posts\";\nimport { Navbar } from \"./Navbar\";\nimport { useHistory } from \"react-router-dom\";\nimport { VideoTable } from \"./VideoTable\";\nexport const Home = () => {\n  let [posts, setPosts] = useState([]);\n  let [dates, setDates] = useState([]);\n  let [currentLikes, setCurrentLikes] = useState([]);\n  let [currentVideos, setCurrentVideos] = useState([]);\n  let [categories, setCategories] = useState([]);\n  let [videoTitles, setVideoTitles] = useState([])\n  let history = useHistory();\n\n  let user_token = firebase.auth().currentUser.getIdToken();\n\n  let user = {\n    header: \"Access-Control-Allow-Origin\",\n    token: user_token,\n    email: firebase.auth().currentUser.email,\n  };\n\n  useEffect(() => {\n    axios.post(\"http://localhost:5000/home\", user).then((res) => {\n      fetch(\"http://localhost:5000/get-posts\", { credentials: \"include\" }).then(\n        (response) => {\n          response.json().then((data) => {\n            setPosts(data.data[0].reverse());\n            setDates(data.data[1].reverse());\n            setCurrentLikes(data.data[2].reverse());\n            setCategories(data.data[3].reverse());\n            setVideoTitles(data.data[4].reverse())\n            setCurrentVideos(data.data[5].reverse());\n          });\n        }\n      );\n    });\n  }, []);\n\n  let [value, setValue] = useState(\"\");\n  let [category, setCategory] = useState(\"\");\n  let [videoName, setVideoName] = useState(\"\")\n\n  let handleInputChange = (e) => {\n    let inputValue = e.target.value;\n    setValue(inputValue);\n  };\n\n  let handleCategoryChange = (e) => {\n    let categoryValue = e.target.value;\n    setCategory(categoryValue);\n  };\n\n  let handleVideoChange = (e) => {\n    let videoValue = e.target.value;\n    setVideoName(videoValue);\n  };\n\n\n  let submitPost = (e) => {\n    let postText = {\n      header: \"Access-Control-Allow-Origin\",\n      email: firebase.auth().currentUser.email,\n      text: value,\n      noteCategory: category,\n      video: videoName\n    };\n    axios.post(\"http://localhost:5000/add-post\", postText).then((res) => {\n      setPosts(res.data.data[0].reverse());\n      setDates(res.data.data[1].reverse());\n      setCurrentLikes(res.data.data[2].reverse());\n      setCategories(res.data.data[3].reverse());\n      setVideoTitles(res.data.data[4].reverse())\n      setCurrentVideos(res.data.data[5].reverse());\n    });\n    setValue(\"\");\n    setCategory(\"\");\n  };\n\n  let signOut = () => {\n    firebase.auth().signOut();\n    history.push(\"/\");\n  };\n\n  const bg_mode = useColorModeValue(\"gray.50\", \"inherit\");\n  return (\n    <div>\n      <Navbar />\n      <Box\n        bg={bg_mode}\n        minH=\"100vh\"\n        py=\"12\"\n        px={{\n          base: \"4\",\n          lg: \"8\",\n        }}\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n      >\n        <Box maxW=\"md\" mx=\"auto\">\n          <Center>\n            <Heading color=\"white\" fontSize=\"6xl\" fontWeight=\"extrabold\">\n              Your Profile\n            </Heading>\n          </Center>\n          <br />\n          <Card>\n            <Text textAlign=\"center\">\n              Welcome\n              <Text\n                bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n                bgClip=\"text\"\n                fontWeight=\"bold\"\n              >\n                {firebase.auth().currentUser.displayName}\n              </Text>\n            </Text>\n            <br />\n            <div align=\"center\">\n              <img src={firebase.auth().currentUser.photoURL}></img>\n            </div>\n            <br />\n            <Center>\n              <Button\n                align=\"center\"\n                color={\"white\"}\n                onClick={signOut}\n                bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n                _hover={{\n                  bgGradient: \"linear(to-r, red.400,pink.400)\",\n                  boxShadow: \"xl\",\n                }}\n              >\n                Sign Out\n              </Button>\n            </Center>\n          </Card>\n        </Box>\n        <br />\n        <br />\n        <Heading color=\"white\" fontSize=\"6xl\" fontWeight=\"extrabold\" textAlign=\"center\">\n          Your Videos\n        </Heading>\n        <br />\n        <br />\n        <br />\n        <VideoTable videos={currentVideos} />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </Box>\n    </div>\n  );\n};\n","C:\\Users\\t\\Sharp\\src\\components\\Navbar.js",["92","93","94","95"],"import React from \"react\";\nimport firebase from \"firebase\";\nimport {\n  chakra,\n  Box,\n  Flex,\n  useColorModeValue,\n  VisuallyHidden,\n  HStack,\n  Button,\n  useDisclosure,\n  VStack,\n  IconButton,\n  CloseButton,\n  Avatar,\n  Link,\n} from \"@chakra-ui/react\";\nimport { AiOutlineMenu } from \"react-icons/ai\";\nimport ContactlessIcon from \"@material-ui/icons/Contactless\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { FirebaseAuth } from \"react-firebaseui\";\nimport { Redirect } from \"react-router\";\n\nexport const Navbar = () => {\n  const bg = useColorModeValue(\"white\", \"gray.800\");\n  const mobileNav = useDisclosure();\n\n  return (\n    <React.Fragment>\n      <chakra.header\n        bg={bg}\n        w=\"full\"\n        px={{ base: 2, sm: 4 }}\n        py={4}\n        shadow=\"md\"\n      >\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mx=\"auto\">\n          <Flex>\n            <chakra.a\n              href=\"/\"\n              title=\"Choc Home Page\"\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <ContactlessIcon fontSize=\"large\" htmlColor=\"#0063d1\" />\n            </chakra.a>\n            <chakra.h1 fontSize=\"2xl\" fontWeight=\"bold\" ml=\"2\">\n              DeepEducation\n            </chakra.h1>\n          </Flex>\n          <HStack display=\"flex\" alignItems=\"center\" spacing={1}>\n            <HStack\n              spacing={1}\n              mr={1}\n              color=\"brand.500\"\n              display={{ base: \"none\", md: \"inline-flex\" }}\n            >\n              <Link href=\"/\">\n                <Button variant=\"ghost\" colorScheme=\"messenger\">\n                  Home\n                </Button>\n              </Link>\n              <Link href=\"/videos\">\n                <Button variant=\"ghost\" colorScheme=\"messenger\">\n                  Videos\n                </Button>\n              </Link>\n              <Link href=\"/profile\">\n                <Button variant=\"ghost\" colorScheme=\"messenger\">\n                  Profile\n                </Button>\n              </Link>\n              {/* <Button variant=\"ghost\" colorScheme=\"messenger\">\n                Video Chat\n              </Button> */}\n            </HStack>\n            <Avatar\n              size=\"sm\"\n              name={firebase.auth().currentUser.displayName}\n              src={firebase.auth().currentUser.photoURL}\n            />\n            <Box display={{ base: \"inline-flex\", md: \"none\" }}>\n              <IconButton\n                display={{ base: \"flex\", md: \"none\" }}\n                aria-label=\"Open menu\"\n                fontSize=\"20px\"\n                color={useColorModeValue(\"gray.800\", \"inherit\")}\n                variant=\"ghost\"\n                icon={<AiOutlineMenu />}\n                onClick={mobileNav.onOpen}\n              />\n\n              <VStack\n                pos=\"absolute\"\n                top={0}\n                left={0}\n                right={0}\n                display={mobileNav.isOpen ? \"flex\" : \"none\"}\n                flexDirection=\"column\"\n                p={2}\n                pb={4}\n                m={2}\n                bg={bg}\n                spacing={3}\n                rounded=\"sm\"\n                shadow=\"sm\"\n              >\n                <CloseButton\n                  aria-label=\"Close menu\"\n                  onClick={mobileNav.onClose}\n                />\n\n                <Link href=\"/\">\n                  <Button variant=\"ghost\" colorScheme=\"messenger\">\n                    Home\n                  </Button>\n                </Link>\n                <Link href=\"/videos\">\n                  <Button variant=\"ghost\" colorScheme=\"messenger\">\n                    Videos\n                  </Button>\n                </Link>\n                <Link href=\"/profile\">\n                  <Button variant=\"ghost\" colorScheme=\"messenger\">\n                    Profile\n                  </Button>\n                </Link>\n                {/* <Button variant=\"ghost\" colorScheme=\"messenger\">\n                  Video Chat\n                </Button> */}\n              </VStack>\n            </Box>\n          </HStack>\n        </Flex>\n      </chakra.header>\n    </React.Fragment>\n  );\n};\n","C:\\Users\\t\\Sharp\\src\\components\\Feed.js",["96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"C:\\Users\\t\\Sharp\\src\\components\\Landing.js",["122","123","124","125","126","127","128"],"import React from \"react\";\nimport {\n  chakra,\n  Box,\n  useColorModeValue,\n  Icon,\n  Image,\n  HStack,\n  Stack,\n  Button,\n  Flex,\n  SimpleGrid,\n  GridItem,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport { Break } from \"./Break\";\n\nexport const Landing = ({ isSignedIn }) => {\n  let history = useHistory();\n\n  const goToLogin = () => {\n    history.push(\"/login\");\n  };\n  const goToFeed = () => {\n    history.push(\"/videos\");\n  };\n\n  const bg1 = useColorModeValue(\"gray.900\", \"white\");\n  const bg2 = useColorModeValue(\"brand.600\", \"brand.400\");\n\n  const Feature = (props) => {\n    return (\n      <Flex>\n        <Flex shrink={0}>\n          <Icon\n            boxSize={5}\n            mt={1}\n            mr={2}\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </Icon>\n        </Flex>\n        <Box ml={6}>\n          <chakra.dt fontSize=\"lg\" fontWeight=\"bold\" lineHeight=\"6\">\n            {props.title}\n          </chakra.dt>\n          <chakra.dd mt={2}>{props.children}</chakra.dd>\n        </Box>\n      </Flex>\n    );\n  };\n\n  if (isSignedIn === true) {\n    return (\n      <div>\n        <Box\n          minH=\"5xl\"\n          py=\"12\"\n          px={{\n            base: \"4\",\n            lg: \"8\",\n          }}\n          bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n          alignContent=\"center\"\n        >\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Box pos=\"relative\" overflow=\"hidden\">\n            <Box maxW=\"7xl\" mx=\"auto\">\n              <Box\n                pos=\"relative\"\n                pb={{ base: 8, sm: 16, md: 20, lg: 28, xl: 32 }}\n                w=\"full\"\n                border=\"solid 1px transparent\"\n              >\n                <Box\n                  mt={10}\n                  mx=\"auto\"\n                  maxW={{ base: \"7xl\" }}\n                  px={{ base: 4, sm: 6, lg: 8 }}\n                  mt={{ base: 12, md: 16, lg: 20, xl: 28 }}\n                >\n                  <Box\n                    textAlign=\"center\"\n                    w={{ base: \"full\", md: 11 / 12, xl: 8 / 12 }}\n                    mx=\"auto\"\n                  >\n                    <chakra.h1\n                      fontSize={{ base: \"4xl\", sm: \"5xl\", md: \"6xl\" }}\n                      letterSpacing=\"tight\"\n                      lineHeight=\"short\"\n                      fontWeight=\"extrabold\"\n                      color=\"white\"\n                    >\n                      <chakra.span display={{ base: \"block\", xl: \"inline\" }}>\n                        Break Language Barriers with{\" \"}\n                      </chakra.span>\n                      <chakra.span\n                        display={{ base: \"block\", xl: \"inline\" }}\n                        color=\"twitter.100\"\n                      >\n                        DeepEducation\n                      </chakra.span>\n                    </chakra.h1>\n                    <chakra.p\n                      mt={{ base: 3, sm: 5, md: 8 }}\n                      mx={12}\n                      mb={10}\n                      fontSize={{ base: \"lg\", md: \"xl\" }}\n                      color=\"facebook.100\"\n                      lineHeight=\"base\"\n                    >\n                      An educational platform that uses artificial intelligence\n                      to translate video content to increase educational equity\n                      and accessibility.\n                    </chakra.p>\n                    <Stack\n                      direction={{ base: \"column\", sm: \"column\", md: \"row\" }}\n                      mb={{ base: 4, md: 8 }}\n                      spacing={{ base: 4, md: 2 }}\n                      justifyContent=\"center\"\n                    >\n                      <Button\n                        size=\"md\"\n                        variant=\"ghost\"\n                        bgGradient=\"linear(to-r, blue.100, blue.300)\"\n                        onClick={goToFeed}\n                      >\n                        {firebase.auth().currentUser.displayName}'s Videos\n                      </Button>\n                    </Stack>\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <br />\n        <br />\n        <Text\n          bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\n          bgClip=\"text\"\n          fontSize=\"6xl\"\n          fontWeight=\"extrabold\"\n          textAlign=\"center\"\n        >\n          Features\n        </Text>\n        <Flex p={20} w=\"auto\" justifyContent=\"center\" alignItems=\"center\">\n          <Box\n            shadow=\"3xl\"\n            px={8}\n            py={20}\n            mx=\"auto\"\n            bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n            rounded=\"lg\"\n          >\n            <SimpleGrid\n              alignItems=\"center\"\n              columns={{ base: 1, lg: 3 }}\n              spacingY={{ base: 10, lg: 32 }}\n              spacingX={{ base: 10, lg: 24 }}\n            >\n              <Box alignSelf=\"start\" color=\"white\">\n                <chakra.h2\n                  fontWeight=\"semibold\"\n                  textTransform=\"uppercase\"\n                  letterSpacing=\"wide\"\n                >\n                  A Universal Platform\n                </chakra.h2>\n                <chakra.h2\n                  mb={3}\n                  fontSize={{ base: \"3xl\", md: \"4xl\" }}\n                  fontWeight=\"extrabold\"\n                  textAlign={{ base: \"center\", sm: \"left\" }}\n                  lineHeight=\"shorter\"\n                  letterSpacing=\"tight\"\n                >\n                  Translate Lectures Instantly\n                </chakra.h2>\n                <chakra.p\n                  mb={6}\n                  fontSize={{ base: \"lg\", md: \"xl\" }}\n                  textAlign={{ base: \"center\", sm: \"left\" }}\n                >\n                  DeepEducation breaks language barriers by allowing learners to\n                  translate online educational videos into any language.\n                </chakra.p>\n              </Box>\n              <GridItem colSpan={2} color=\"white\">\n                <Stack\n                  spacing={{ base: 10, md: 0 }}\n                  display={{ md: \"grid\" }}\n                  gridTemplateColumns={{ md: \"repeat(2,1fr)\" }}\n                  gridColumnGap={{ md: 8 }}\n                  gridRowGap={{ md: 10 }}\n                >\n                  <Feature title=\"Translate Rapidly\">\n                    Our Google Cloud Machine Learning backend enables users to\n                    translate their lecture videos in under a minute ⏱{\" \"}\n                  </Feature>\n                  <Feature title=\"Personal Security\">\n                    Login instantaneously using Google, Facebook, GitHub, or\n                    your email. We will never share any user data with\n                    third-party services 🔒\n                  </Feature>\n                  <Feature title=\"Expand Your Educational Experience\">\n                    {\" \"}\n                    Our amazing platform allows users to gain access to millions\n                    of new educational videos. Learn about new cultures, ideas,\n                    and concepts by translating content to your preferred\n                    language 🗣\n                  </Feature>\n                  <Feature title=\"Take Notes on Important Concepts\">\n                    {\" \"}\n                    DeepEducation allows users to take notes and summarize video\n                    transcripts to provide an efficient educational experience\n                    ✍️{\" \"}\n                  </Feature>\n                  <Feature title=\"Accessibility\">\n                    {\" \"}\n                    Translate educational videos in over 40 languages and\n                    generate translated transcripts to easily follow along. Additionally,\n                    our DeepDub feature uses a neural network for face manipulation, making the videos\n                    much more natural 📚\n                  </Feature>\n                  <Feature title=\"Organize Your Learning Journey\">\n                    {\" \"}\n                    Our user-friendly platform allows learners to categorize\n                    their notes and develop notes for each of their translated\n                    videos 📝{\" \"}\n                  </Feature>\n                </Stack>\n              </GridItem>\n            </SimpleGrid>\n          </Box>\n        </Flex>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Box\n          minH=\"100vh\"\n          py=\"12\"\n          px={{\n            base: \"4\",\n            lg: \"8\",\n          }}\n          bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n        >\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Box pos=\"relative\" overflow=\"hidden\">\n            <Box maxW=\"7xl\" mx=\"auto\">\n              <Box\n                pos=\"relative\"\n                pb={{ base: 8, sm: 16, md: 20, lg: 28, xl: 32 }}\n                w=\"full\"\n                border=\"solid 1px transparent\"\n              >\n                <Box\n                  mt={10}\n                  mx=\"auto\"\n                  maxW={{ base: \"7xl\" }}\n                  px={{ base: 4, sm: 6, lg: 8 }}\n                  mt={{ base: 12, md: 16, lg: 20, xl: 28 }}\n                >\n                  <Box\n                    textAlign=\"center\"\n                    w={{ base: \"full\", md: 11 / 12, xl: 8 / 12 }}\n                    mx=\"auto\"\n                  >\n                    <chakra.h1\n                      fontSize={{ base: \"4xl\", sm: \"5xl\", md: \"6xl\" }}\n                      letterSpacing=\"tight\"\n                      lineHeight=\"short\"\n                      fontWeight=\"extrabold\"\n                      color=\"white\"\n                    >\n                      <chakra.span display={{ base: \"block\", xl: \"inline\" }}>\n                        Break Language Barriers with{\" \"}\n                      </chakra.span>\n                      <chakra.span\n                        display={{ base: \"block\", xl: \"inline\" }}\n                        color=\"twitter.100\"\n                      >\n                        DeepEducation\n                      </chakra.span>\n                    </chakra.h1>\n                    <chakra.p\n                      mt={{ base: 3, sm: 5, md: 8 }}\n                      mx={12}\n                      mb={10}\n                      fontSize={{ base: \"lg\", md: \"xl\" }}\n                      color=\"facebook.100\"\n                      lineHeight=\"base\"\n                    >\n                      An educational platform that uses artificial intelligence\n                      to translate video content to increase educational equity\n                      and accessibility.\n                    </chakra.p>\n                    <Stack\n                      direction={{ base: \"column\", sm: \"column\", md: \"row\" }}\n                      mb={{ base: 4, md: 8 }}\n                      spacing={{ base: 4, md: 2 }}\n                      justifyContent=\"center\"\n                    >\n                      <Button\n                        size=\"md\"\n                        variant=\"ghost\"\n                        bgGradient=\"linear(to-r, blue.100, blue.300)\"\n                        onClick={goToLogin}\n                      >\n                        Start Your Learning Journey\n                      </Button>\n                    </Stack>\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <br />\n        <br />\n        <Text\n          bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\n          bgClip=\"text\"\n          fontSize=\"6xl\"\n          fontWeight=\"extrabold\"\n          textAlign=\"center\"\n        >\n          Features\n        </Text>\n        <Flex p={20} w=\"auto\" justifyContent=\"center\" alignItems=\"center\">\n          <Box\n            shadow=\"3xl\"\n            px={8}\n            py={20}\n            mx=\"auto\"\n            bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n            rounded=\"lg\"\n          >\n            <SimpleGrid\n              alignItems=\"center\"\n              columns={{ base: 1, lg: 3 }}\n              spacingY={{ base: 10, lg: 32 }}\n              spacingX={{ base: 10, lg: 24 }}\n            >\n              <Box alignSelf=\"start\" color=\"white\">\n                <chakra.h2\n                  fontWeight=\"semibold\"\n                  textTransform=\"uppercase\"\n                  letterSpacing=\"wide\"\n                >\n                  A Universal Platform\n                </chakra.h2>\n                <chakra.h2\n                  mb={3}\n                  fontSize={{ base: \"3xl\", md: \"4xl\" }}\n                  fontWeight=\"extrabold\"\n                  textAlign={{ base: \"center\", sm: \"left\" }}\n                  lineHeight=\"shorter\"\n                  letterSpacing=\"tight\"\n                >\n                  Translate Lectures Instantly\n                </chakra.h2>\n                <chakra.p\n                  mb={6}\n                  fontSize={{ base: \"lg\", md: \"xl\" }}\n                  textAlign={{ base: \"center\", sm: \"left\" }}\n                >\n                  DeepEducation breaks language barriers by allowing learners to\n                  translate online educational videos into any language.\n                </chakra.p>\n              </Box>\n              <GridItem colSpan={2} color=\"white\">\n                <Stack\n                  spacing={{ base: 10, md: 0 }}\n                  display={{ md: \"grid\" }}\n                  gridTemplateColumns={{ md: \"repeat(2,1fr)\" }}\n                  gridColumnGap={{ md: 8 }}\n                  gridRowGap={{ md: 10 }}\n                >\n                  <Feature title=\"Translate Rapidly\">\n                    Our Google Cloud Machine Learning backend enables users to\n                    translate their lecture videos in under a minute ⏱{\" \"}\n                  </Feature>\n                  <Feature title=\"Personal Security\">\n                    Login instantaneously using Google, Facebook, GitHub, or\n                    your email. We will never share any user data with\n                    third-party services 🔒\n                  </Feature>\n                  <Feature title=\"Expand Your Educational Experience\">\n                    {\" \"}\n                    Our amazing platform allows users to gain access to millions\n                    of new educational videos. Learn about new cultures, ideas,\n                    and concepts by translating content to your preferred\n                    language 🗣\n                  </Feature>\n                  <Feature title=\"Take Notes on Important Concepts\">\n                    {\" \"}\n                    DeepEducation allows users to take notes and summarize video\n                    transcripts to provide an efficient educational experience\n                    ✍️{\" \"}\n                  </Feature>\n                  <Feature title=\"Accessibility\">\n                    {\" \"}\n                    Translate educational videos in over 40 languages and\n                    generate translated transcripts to easily follow along. Additionally,\n                    our DeepDub feature uses a neural network for face manipulation, making the videos\n                    much more natural 📚\n                  </Feature>\n                  <Feature title=\"Organize Your Learning Journey\">\n                    {\" \"}\n                    Our user-friendly platform allows learners to categorize\n                    their notes and develop notes for each of their translated\n                    videos 📝{\" \"}\n                  </Feature>\n                </Stack>\n              </GridItem>\n            </SimpleGrid>\n          </Box>\n        </Flex>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n};\n","C:\\Users\\t\\Sharp\\src\\components\\Card.js",[],"C:\\Users\\t\\Sharp\\src\\components\\Posts.js",["129"],"import React from \"react\";\nimport { Post } from \"./Post\";\nimport { Flex, Icon, Box, chakra } from \"@chakra-ui/react\";\n\nimport { BsLightningFill } from \"react-icons/bs\";\n\nexport const Posts = ({ posts, dates, likes, categories }) => {\n  let finalPosts = [];\n  for (let i = 0; i < posts.length; i++) {\n    let x = [posts[i], dates[i], likes[i], categories[i]];\n    finalPosts.push(x);\n  }\n  const bg1 = \"gray.800\";\n  const bg2 = \"red.400\";\n  const bg3 = \"gray.200\";\n\n  if (finalPosts.length > 0) {\n    return (\n      <div>\n        <br />\n        {finalPosts.map((post) => (\n          <Post post={post} />\n        ))}\n      </div>\n    );\n  } else {\n    return (\n      <Flex\n        maxW=\"sm\"\n        w=\"full\"\n        mx=\"auto\"\n        bg={bg1}\n        shadow=\"md\"\n        rounded=\"lg\"\n        overflow=\"hidden\"\n      >\n        <Flex justifyContent=\"center\" alignItems=\"center\" w={12} bg=\"blue.500\">\n          <Icon as={BsLightningFill} color=\"white\" boxSize={6} />\n        </Flex>\n\n        <Box mx={-3} py={2} px={4}>\n          <Box mx={3}>\n            <chakra.span color=\"blue.300\" fontWeight=\"bold\">\n              No Notes 😕\n            </chakra.span>\n            <chakra.p color={bg3} fontSize=\"sm\">\n              You haven't created any notes yet!\n            </chakra.p>\n          </Box>\n        </Box>\n      </Flex>\n    );\n  }\n};\n","C:\\Users\\t\\Sharp\\src\\components\\VideoTable.js",["130","131","132","133","134","135","136","137","138","139","140","141","142"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport { Button, Link } from \"@chakra-ui/react\";\nimport { VideoModal } from \"./VideoModal\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport firebase from \"firebase\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Box,\n  Text,\n  Heading,\n} from \"@chakra-ui/react\";\nimport { chakra, Icon } from \"@chakra-ui/react\";\n\nimport { BsLightningFill } from \"react-icons/bs\";\nimport { NotesModal } from \"./NotesModal\";\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 500,\n//   },\n// });\n\nconst bg1 = \"gray.800\";\nconst bg2 = \"red.400\";\nconst bg3 = \"gray.200\";\n\nexport const VideoTable = ({ videos }) => {\n  let [posts, setPosts] = useState([]);\n  let [dates, setDates] = useState([]);\n  let [currentLikes, setCurrentLikes] = useState([]);\n  let [currentVideos, setCurrentVideos] = useState([]);\n  let [categories, setCategories] = useState([]);\n  let [videoTitles, setVideoTitles] = useState([]);\n  let user_token = firebase.auth().currentUser.getIdToken();\n\n  let user = {\n    header: \"Access-Control-Allow-Origin\",\n    token: user_token,\n    email: firebase.auth().currentUser.email,\n  };\n\n  useEffect(() => {\n    axios.post(\"http://localhost:5000/home\", user).then((res) => {\n      fetch(\"http://localhost:5000/get-posts\", { credentials: \"include\" }).then(\n        (response) => {\n          response.json().then((data) => {\n            setPosts(data.data[0].reverse());\n            setDates(data.data[1].reverse());\n            setCurrentLikes(data.data[2].reverse());\n            setCategories(data.data[3].reverse());\n            setVideoTitles(data.data[4].reverse());\n            setCurrentVideos(data.data[5].reverse());\n          });\n        }\n      );\n    });\n  }, []);\n\n  let videoNotePairs = [];\n  for (let i = 0; i < posts.length; i++) {\n    let x = [\n      posts[i],\n      dates[i],\n      currentLikes[i],\n      categories[i],\n      videoTitles[i],\n    ];\n    videoNotePairs.push(x);\n  }\n  if (videos.length > 0) {\n    return (\n      <Box bgColor=\"white\">\n        <Table variant=\"striped\" colorScheme=\"linkedin\">\n          <Thead>\n            <Tr>\n              <Th>\n                <Text fontSize=\"md\" fontWeight=\"bold\">\n                  Video Title\n                </Text>\n              </Th>\n              <Th>\n                <Text fontSize=\"md\" fontWeight=\"bold\">\n                  Original Video\n                </Text>\n              </Th>\n              <Th>\n                <Text fontSize=\"md\" fontWeight=\"bold\">\n                  Translated Video\n                </Text>\n              </Th>\n              <Th>\n                <Text fontSize=\"md\" fontWeight=\"bold\">\n                  Notes\n                </Text>\n              </Th>\n              <Th>\n                <Text fontSize=\"md\" fontWeight=\"bold\">\n                  Date\n                </Text>\n              </Th>\n            </Tr>\n          </Thead>\n          {videos.map((video) => (\n            <Tbody>\n              <Tr>\n                <Td>{video[0]}</Td>\n                <Td>\n                  <Link href={video[1]} isExternal={true}>\n                    <Button colorScheme=\"facebook\" variant=\"solid\">\n                      View Video\n                    </Button>\n                  </Link>\n                </Td>\n                <Td>\n                  <VideoModal\n                    video={video[2]}\n                    title={video[0]}\n                    transcript={video[3]}\n                    summary={video[5]}\n                  />\n                </Td>\n                <Td>\n                  <NotesModal groups={videoNotePairs} videoTitle={video[0]} />\n                </Td>\n                <Td>{video[4]}</Td>\n              </Tr>\n            </Tbody>\n          ))}\n        </Table>\n      </Box>\n    );\n  } else {\n    return (\n      <Flex\n        maxW=\"sm\"\n        w=\"full\"\n        mx=\"auto\"\n        bg={bg1}\n        shadow=\"md\"\n        rounded=\"lg\"\n        overflow=\"hidden\"\n      >\n        <Flex justifyContent=\"center\" alignItems=\"center\" w={12} bg=\"blue.500\">\n          <Icon as={BsLightningFill} color=\"white\" boxSize={6} />\n        </Flex>\n\n        <Box mx={-3} py={2} px={4}>\n          <Box mx={3}>\n            <chakra.span color=\"blue.300\" fontWeight=\"bold\">\n              No Videos 😕\n            </chakra.span>\n            <chakra.p color={bg3} fontSize=\"sm\">\n              You haven't translated any videos yet!\n            </chakra.p>\n          </Box>\n        </Box>\n      </Flex>\n    );\n  }\n};\n\nexport default VideoTable;\n\n//   const classes = useStyles();\n\n//   return (\n//     <Flex bgColor=\"messenger.200\">\n//       <TableContainer component={Paper}>\n//         <Table className={classes.table} aria-label=\"simple table\" bgColor=\"#b5def7\">\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>Video&nbsp;Title</TableCell>\n//               <TableCell align=\"right\">Original&nbsp;Video</TableCell>\n//               <TableCell align=\"right\">Translated&nbsp;Video</TableCell>\n//               <TableCell align=\"right\">Date</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {videos.map((video) => (\n//               <TableRow key={video[0]}>\n//                 <TableCell component=\"th\" scope=\"row\">\n//                   {video[0]}\n//                 </TableCell>\n//                 <TableCell align=\"right\">\n//                   <Link href={video[1]} isExternal={true}>\n//                     <Button colorScheme=\"messenger\" variant=\"outline\">\n//                       View Video\n//                     </Button>\n//                   </Link>\n//                 </TableCell>\n//                 <TableCell align=\"right\">\n//                     <VideoModal video={video[2]} title={video[0]} transcript={video[3]}/>\n//                 </TableCell>\n//                 <TableCell align=\"right\">{video[4]}</TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Flex>\n//   );\n// };\n\n// import {\n//   Table,\n//   Thead,\n//   Tbody,\n//   Tfoot,\n//   Tr,\n//   Th,\n//   Td,\n//   TableCaption,\n// } from \"@chakra-ui/react\";\n\n// <Table variant=\"striped\" colorScheme=\"teal\">\n//   <Thead>\n//     <Tr>\n//       <Th>Video Title</Th>\n//       <Th>Original Video</Th>\n//       <Th>Translated Video</Th>\n//       <Th>Date</Th>\n//     </Tr>\n//   </Thead>\n//   {videos.map((video) => (\n//     <Tbody>\n//       <Tr>\n//         <Td>{video[0]}</Td>\n//       </Tr>\n//       <Tr>\n//         <Td>\n//           <Link href={video[1]} isExternal={true}>\n//             <Button colorScheme=\"messenger\" variant=\"outline\">\n//               View Video\n//             </Button>\n//           </Link>\n//         </Td>\n//       </Tr>\n//       <Tr>\n//         <Td>\n//           <VideoModal video={video[2]} title={video[0]} transcript={video[3]} />\n//         </Td>\n//       </Tr>\n//       <Tr>\n//         <Td>\n//           <TableCell align=\"right\">{video[4]}</TableCell>\n//         </Td>\n//       </Tr>\n//     </Tbody>\n//   ))}\n// </Table>\n","C:\\Users\\t\\Sharp\\src\\components\\Break.js",[],"C:\\Users\\t\\Sharp\\src\\components\\Post.js",["143","144","145","146","147"],"import React from \"react\";\nimport { Break } from \"./Break\";\nimport {\n  Box,\n  Heading,\n  useColorModeValue,\n  Text,\n  Textarea,\n  Button,\n  Center,\n  Input,\n} from \"@chakra-ui/react\";\nimport { Card } from \"./Card\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport firebase from \"firebase\";\n\nexport const Post = ({ post }) => {\n  let [likes, setLikes] = useState(1);\n  if (likes !== post[2]) {\n    setLikes(post[2]);\n  }\n\n  let user_token = firebase.auth().currentUser.getIdToken();\n  let user = {\n    header: \"Access-Control-Allow-Origin\",\n    token: user_token,\n    email: firebase.auth().currentUser.email,\n  };\n\n  const likePost = () => {\n    setLikes((likes += 1));\n    let post_data = {\n      header: \"Access-Control-Allow-Origin\",\n      text: post[0],\n    };\n    axios.post(\"http://localhost:5000/home\", user).then((response) => {\n      axios.post(\"http://localhost:5000/like\", post_data).then((res) => {\n        post[2] = res.data.data;\n        setLikes(post[2]);\n        console.log(res.data.data);\n      });\n    });\n  };\n\n  return (\n    <Box maxW=\"md\" mx=\"auto\">\n      <Card bgGradient=\"linear(to-r, blue.300, blue.500)\">\n        <Text\n          mb=\"8px\"\n          bgColor=\"white\"\n          bgClip=\"text\"\n          fontWeight=\"extrabold\"\n          textAlign=\"center\"\n          fontSize=\"lg\"\n        >\n          Note:\n        </Text>\n        <Text textAlign=\"center\" mb=\"8px\" color=\"white\">\n          {post[0]}\n        </Text>\n        <Break />\n        <Text\n          mb=\"8px\"\n          bgColor=\"white\"\n          bgClip=\"text\"\n          fontWeight=\"extrabold\"\n          textAlign=\"center\"\n          fontSize=\"lg\"\n        >\n          Date:\n        </Text>\n        <Text textAlign=\"center\" mb=\"8px\" color=\"white\">\n          {post[1]}\n        </Text>\n        <Break />\n        <Center>\n          <Button\n            fontFamily={\"heading\"}\n            mt={4}\n            // w={'full'}\n            colorScheme=\"facebook\"\n            _hover={{\n              bgGradient: \"linear(to-r, blue.200, gray.100)\",\n              boxShadow: \"xl\",\n            }}\n            onClick={likePost}\n          >\n            Like\n          </Button>\n        </Center>\n        <Break />\n        <Text\n          mb=\"8px\"\n          bgColor=\"white\"\n          bgClip=\"text\"\n          fontWeight=\"extrabold\"\n          fontSize=\"lg\"\n          textAlign=\"center\"\n        >\n          Likes:\n        </Text>\n        <Text mb=\"8px\" textAlign=\"center\" color=\"white\">\n          {likes}\n        </Text>\n        <Break />\n        <Text\n          mb=\"8px\"\n          bgColor=\"white\"\n          bgClip=\"text\"\n          fontWeight=\"bold\"\n          textAlign=\"center\"\n        >\n          Category:\n        </Text>\n        <Text mb=\"8px\" textAlign=\"center\" color=\"white\">\n          {post[3]}\n        </Text>\n      </Card>\n      <Break />\n    </Box>\n  );\n};\n","C:\\Users\\t\\Sharp\\src\\components\\VideoModal.js",[],"C:\\Users\\t\\Sharp\\src\\components\\NotesModal.js",[],{"ruleId":"148","severity":1,"message":"149","line":8,"column":3,"nodeType":"150","messageId":"151","endLine":8,"endColumn":11},{"ruleId":"148","severity":1,"message":"152","line":12,"column":26,"nodeType":"150","messageId":"151","endLine":12,"endColumn":40},{"ruleId":"148","severity":1,"message":"153","line":15,"column":10,"nodeType":"150","messageId":"151","endLine":15,"endColumn":16},{"ruleId":"148","severity":1,"message":"154","line":26,"column":9,"nodeType":"150","messageId":"151","endLine":26,"endColumn":17},{"ruleId":"148","severity":1,"message":"155","line":39,"column":7,"nodeType":"150","messageId":"151","endLine":39,"endColumn":14},{"ruleId":"148","severity":1,"message":"156","line":7,"column":3,"nodeType":"150","messageId":"151","endLine":7,"endColumn":9},{"ruleId":"148","severity":1,"message":"155","line":17,"column":7,"nodeType":"150","messageId":"151","endLine":17,"endColumn":14},{"ruleId":"148","severity":1,"message":"157","line":9,"column":3,"nodeType":"150","messageId":"151","endLine":9,"endColumn":11},{"ruleId":"148","severity":1,"message":"158","line":12,"column":3,"nodeType":"150","messageId":"151","endLine":12,"endColumn":8},{"ruleId":"148","severity":1,"message":"159","line":13,"column":3,"nodeType":"150","messageId":"151","endLine":13,"endColumn":9},{"ruleId":"148","severity":1,"message":"160","line":17,"column":10,"nodeType":"150","messageId":"151","endLine":17,"endColumn":15},{"ruleId":"148","severity":1,"message":"161","line":22,"column":8,"nodeType":"150","messageId":"151","endLine":22,"endColumn":13},{"ruleId":"148","severity":1,"message":"162","line":23,"column":8,"nodeType":"150","messageId":"151","endLine":23,"endColumn":13},{"ruleId":"148","severity":1,"message":"163","line":24,"column":8,"nodeType":"150","messageId":"151","endLine":24,"endColumn":20},{"ruleId":"148","severity":1,"message":"164","line":26,"column":8,"nodeType":"150","messageId":"151","endLine":26,"endColumn":18},{"ruleId":"148","severity":1,"message":"165","line":27,"column":8,"nodeType":"150","messageId":"151","endLine":27,"endColumn":19},{"ruleId":"166","severity":1,"message":"167","line":53,"column":6,"nodeType":"168","endLine":53,"endColumn":8,"suggestions":"169"},{"ruleId":"148","severity":1,"message":"170","line":59,"column":7,"nodeType":"150","messageId":"151","endLine":59,"endColumn":24},{"ruleId":"148","severity":1,"message":"171","line":64,"column":7,"nodeType":"150","messageId":"151","endLine":64,"endColumn":27},{"ruleId":"148","severity":1,"message":"172","line":69,"column":7,"nodeType":"150","messageId":"151","endLine":69,"endColumn":24},{"ruleId":"148","severity":1,"message":"173","line":75,"column":7,"nodeType":"150","messageId":"151","endLine":75,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":134,"column":15,"nodeType":"176","endLine":134,"endColumn":63},{"ruleId":"148","severity":1,"message":"177","line":8,"column":3,"nodeType":"150","messageId":"151","endLine":8,"endColumn":17},{"ruleId":"148","severity":1,"message":"178","line":20,"column":8,"nodeType":"150","messageId":"151","endLine":20,"endColumn":11},{"ruleId":"148","severity":1,"message":"179","line":21,"column":10,"nodeType":"150","messageId":"151","endLine":21,"endColumn":22},{"ruleId":"148","severity":1,"message":"149","line":22,"column":10,"nodeType":"150","messageId":"151","endLine":22,"endColumn":18},{"ruleId":"148","severity":1,"message":"180","line":6,"column":3,"nodeType":"150","messageId":"151","endLine":6,"endColumn":7},{"ruleId":"148","severity":1,"message":"157","line":10,"column":3,"nodeType":"150","messageId":"151","endLine":10,"endColumn":11},{"ruleId":"148","severity":1,"message":"181","line":15,"column":3,"nodeType":"150","messageId":"151","endLine":15,"endColumn":8},{"ruleId":"148","severity":1,"message":"182","line":16,"column":3,"nodeType":"150","messageId":"151","endLine":16,"endColumn":7},{"ruleId":"148","severity":1,"message":"156","line":17,"column":3,"nodeType":"150","messageId":"151","endLine":17,"endColumn":9},{"ruleId":"148","severity":1,"message":"183","line":18,"column":3,"nodeType":"150","messageId":"151","endLine":18,"endColumn":9},{"ruleId":"148","severity":1,"message":"184","line":19,"column":3,"nodeType":"150","messageId":"151","endLine":19,"endColumn":13},{"ruleId":"148","severity":1,"message":"185","line":20,"column":3,"nodeType":"150","messageId":"151","endLine":20,"endColumn":7},{"ruleId":"148","severity":1,"message":"186","line":21,"column":3,"nodeType":"150","messageId":"151","endLine":21,"endColumn":16},{"ruleId":"148","severity":1,"message":"187","line":22,"column":3,"nodeType":"150","messageId":"151","endLine":22,"endColumn":9},{"ruleId":"148","severity":1,"message":"188","line":23,"column":3,"nodeType":"150","messageId":"151","endLine":23,"endColumn":14},{"ruleId":"148","severity":1,"message":"189","line":24,"column":3,"nodeType":"150","messageId":"151","endLine":24,"endColumn":24},{"ruleId":"148","severity":1,"message":"190","line":25,"column":3,"nodeType":"150","messageId":"151","endLine":25,"endColumn":9},{"ruleId":"148","severity":1,"message":"191","line":26,"column":3,"nodeType":"150","messageId":"151","endLine":26,"endColumn":9},{"ruleId":"148","severity":1,"message":"192","line":27,"column":3,"nodeType":"150","messageId":"151","endLine":27,"endColumn":16},{"ruleId":"148","severity":1,"message":"193","line":28,"column":3,"nodeType":"150","messageId":"151","endLine":28,"endColumn":13},{"ruleId":"148","severity":1,"message":"194","line":29,"column":3,"nodeType":"150","messageId":"151","endLine":29,"endColumn":7},{"ruleId":"148","severity":1,"message":"195","line":30,"column":3,"nodeType":"150","messageId":"151","endLine":30,"endColumn":17},{"ruleId":"148","severity":1,"message":"196","line":32,"column":3,"nodeType":"150","messageId":"151","endLine":32,"endColumn":11},{"ruleId":"148","severity":1,"message":"160","line":36,"column":10,"nodeType":"150","messageId":"151","endLine":36,"endColumn":15},{"ruleId":"148","severity":1,"message":"161","line":42,"column":8,"nodeType":"150","messageId":"151","endLine":42,"endColumn":13},{"ruleId":"148","severity":1,"message":"162","line":43,"column":8,"nodeType":"150","messageId":"151","endLine":43,"endColumn":13},{"ruleId":"148","severity":1,"message":"163","line":44,"column":8,"nodeType":"150","messageId":"151","endLine":44,"endColumn":20},{"ruleId":"148","severity":1,"message":"164","line":45,"column":8,"nodeType":"150","messageId":"151","endLine":45,"endColumn":18},{"ruleId":"148","severity":1,"message":"165","line":48,"column":8,"nodeType":"150","messageId":"151","endLine":48,"endColumn":19},{"ruleId":"166","severity":1,"message":"167","line":199,"column":6,"nodeType":"168","endLine":199,"endColumn":8,"suggestions":"197"},{"ruleId":"148","severity":1,"message":"181","line":7,"column":3,"nodeType":"150","messageId":"151","endLine":7,"endColumn":8},{"ruleId":"148","severity":1,"message":"183","line":8,"column":3,"nodeType":"150","messageId":"151","endLine":8,"endColumn":9},{"ruleId":"148","severity":1,"message":"198","line":18,"column":10,"nodeType":"150","messageId":"151","endLine":18,"endColumn":15},{"ruleId":"148","severity":1,"message":"199","line":30,"column":9,"nodeType":"150","messageId":"151","endLine":30,"endColumn":12},{"ruleId":"148","severity":1,"message":"200","line":31,"column":9,"nodeType":"150","messageId":"151","endLine":31,"endColumn":12},{"ruleId":"201","severity":1,"message":"202","line":94,"column":19,"nodeType":"203","messageId":"204","endLine":94,"endColumn":60},{"ruleId":"201","severity":1,"message":"202","line":291,"column":19,"nodeType":"203","messageId":"204","endLine":291,"endColumn":60},{"ruleId":"148","severity":1,"message":"200","line":14,"column":9,"nodeType":"150","messageId":"151","endLine":14,"endColumn":12},{"ruleId":"148","severity":1,"message":"205","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":20},{"ruleId":"148","severity":1,"message":"206","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":17},{"ruleId":"148","severity":1,"message":"207","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":22},{"ruleId":"148","severity":1,"message":"208","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":17},{"ruleId":"148","severity":1,"message":"209","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":16},{"ruleId":"148","severity":1,"message":"210","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":23},{"ruleId":"148","severity":1,"message":"211","line":8,"column":8,"nodeType":"150","messageId":"151","endLine":8,"endColumn":13},{"ruleId":"148","severity":1,"message":"212","line":19,"column":3,"nodeType":"150","messageId":"151","endLine":19,"endColumn":8},{"ruleId":"148","severity":1,"message":"213","line":23,"column":3,"nodeType":"150","messageId":"151","endLine":23,"endColumn":15},{"ruleId":"148","severity":1,"message":"214","line":26,"column":3,"nodeType":"150","messageId":"151","endLine":26,"endColumn":10},{"ruleId":"148","severity":1,"message":"200","line":40,"column":7,"nodeType":"150","messageId":"151","endLine":40,"endColumn":10},{"ruleId":"148","severity":1,"message":"215","line":47,"column":8,"nodeType":"150","messageId":"151","endLine":47,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":73,"column":6,"nodeType":"168","endLine":73,"endColumn":8,"suggestions":"216"},{"ruleId":"148","severity":1,"message":"214","line":5,"column":3,"nodeType":"150","messageId":"151","endLine":5,"endColumn":10},{"ruleId":"148","severity":1,"message":"217","line":6,"column":3,"nodeType":"150","messageId":"151","endLine":6,"endColumn":20},{"ruleId":"148","severity":1,"message":"157","line":8,"column":3,"nodeType":"150","messageId":"151","endLine":8,"endColumn":11},{"ruleId":"148","severity":1,"message":"158","line":11,"column":3,"nodeType":"150","messageId":"151","endLine":11,"endColumn":8},{"ruleId":"148","severity":1,"message":"218","line":14,"column":10,"nodeType":"150","messageId":"151","endLine":14,"endColumn":19},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useFocusOnHide' is defined but never used.","'Navbar' is defined but never used.","'uiConfig' is assigned a value but never used.","'history' is assigned a value but never used.","'chakra' is defined but never used.","'Textarea' is defined but never used.","'Input' is defined but never used.","'Select' is defined but never used.","'Posts' is defined but never used.","'posts' is assigned a value but never used.","'dates' is assigned a value but never used.","'currentLikes' is assigned a value but never used.","'categories' is assigned a value but never used.","'videoTitles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["219"],"'handleInputChange' is assigned a value but never used.","'handleCategoryChange' is assigned a value but never used.","'handleVideoChange' is assigned a value but never used.","'submitPost' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'VisuallyHidden' is defined but never used.","'Fab' is defined but never used.","'FirebaseAuth' is defined but never used.","'Flex' is defined but never used.","'Image' is defined but never used.","'Link' is defined but never used.","'HStack' is defined but never used.","'IconButton' is defined but never used.","'Icon' is defined but never used.","'AiOutlineMenu' is defined but never used.","'VStack' is defined but never used.","'CloseButton' is defined but never used.","'BsFillCameraVideoFill' is defined but never used.","'Avatar' is defined but never used.","'Spacer' is defined but never used.","'useDisclosure' is defined but never used.","'AiFillHome' is defined but never used.","'Logo' is defined but never used.","'ChakraProvider' is defined but never used.","'GridItem' is defined but never used.",["220"],"'Break' is defined but never used.","'bg1' is assigned a value but never used.","'bg2' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'makeStyles' is defined but never used.","'TableBody' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TablePagination' is defined but never used.","'Paper' is defined but never used.","'Tfoot' is defined but never used.","'TableCaption' is defined but never used.","'Heading' is defined but never used.","'currentVideos' is assigned a value but never used.",["221"],"'useColorModeValue' is defined but never used.","'useEffect' is defined but never used.",{"desc":"222","fix":"223"},{"desc":"222","fix":"224"},{"desc":"222","fix":"225"},"Update the dependencies array to be: [user]",{"range":"226","text":"227"},{"range":"228","text":"227"},{"range":"229","text":"227"},[1587,1589],"[user]",[6320,6322],[2199,2201]]