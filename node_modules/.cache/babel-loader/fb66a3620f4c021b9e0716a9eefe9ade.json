{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t\\\\Sharp\\\\src\\\\components\\\\VideoTable.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport { Button, Link } from \"@chakra-ui/react\";\nimport { VideoModal } from \"./VideoModal\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport firebase from \"firebase\";\nimport { Table, Thead, Tbody, Tfoot, Tr, Th, Td, TableCaption, Box, Text, Heading } from \"@chakra-ui/react\";\nimport { chakra, Icon } from \"@chakra-ui/react\";\nimport { BsLightningFill } from \"react-icons/bs\";\nimport { NotesModal } from \"./NotesModal\"; // const useStyles = makeStyles({\n//   table: {\n//     minWidth: 500,\n//   },\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bg1 = \"gray.800\";\nconst bg2 = \"red.400\";\nconst bg3 = \"gray.200\";\nexport const VideoTable = ({\n  videos\n}) => {\n  _s();\n\n  let [posts, setPosts] = useState([]);\n  let [dates, setDates] = useState([]);\n  let [currentLikes, setCurrentLikes] = useState([]);\n  let [currentVideos, setCurrentVideos] = useState([]);\n  let [categories, setCategories] = useState([]);\n  let [videoTitles, setVideoTitles] = useState([]);\n  let user_token = firebase.auth().currentUser.getIdToken();\n  let user = {\n    header: \"Access-Control-Allow-Origin\",\n    token: user_token,\n    email: firebase.auth().currentUser.email\n  };\n  useEffect(() => {\n    axios.post(\"http://localhost:5000/home\", user).then(res => {\n      fetch(\"http://localhost:5000/get-posts\", {\n        credentials: \"include\"\n      }).then(response => {\n        response.json().then(data => {\n          setPosts(data.data[0].reverse());\n          setDates(data.data[1].reverse());\n          setCurrentLikes(data.data[2].reverse());\n          setCategories(data.data[3].reverse());\n          setVideoTitles(data.data[4].reverse());\n          setCurrentVideos(data.data[5].reverse());\n        });\n      });\n    });\n  }, []);\n  let videoNotePairs = [];\n\n  for (let i = 0; i < posts.length; i++) {\n    let x = [posts[i], dates[i], currentLikes[i], categories[i], videoTitles[i]];\n    videoNotePairs.push(x);\n  }\n\n  if (videos.length > 0) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      bgColor: \"white\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        variant: \"striped\",\n        colorScheme: \"linkedin\",\n        children: [/*#__PURE__*/_jsxDEV(Thead, {\n          children: /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"md\",\n                fontWeight: \"bold\",\n                children: \"Video Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"md\",\n                fontWeight: \"bold\",\n                children: \"Original Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"md\",\n                fontWeight: \"bold\",\n                children: \"Translated Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"md\",\n                fontWeight: \"bold\",\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"md\",\n                fontWeight: \"bold\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), videos.map(video => /*#__PURE__*/_jsxDEV(Tbody, {\n          children: /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: video[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: video[1],\n                isExternal: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"facebook\",\n                  variant: \"solid\",\n                  children: \"View Video\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: /*#__PURE__*/_jsxDEV(VideoModal, {\n                video: video[2],\n                title: video[0],\n                transcript: video[3],\n                summary: video[5]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: /*#__PURE__*/_jsxDEV(NotesModal, {\n                groups: videoNotePairs,\n                videoTitle: video[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: video[4]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      maxW: \"sm\",\n      w: \"full\",\n      mx: \"auto\",\n      bg: bg1,\n      shadow: \"md\",\n      rounded: \"lg\",\n      overflow: \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        w: 12,\n        bg: \"blue.500\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          as: BsLightningFill,\n          color: \"white\",\n          boxSize: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mx: -3,\n        py: 2,\n        px: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mx: 3,\n          children: [/*#__PURE__*/_jsxDEV(chakra.span, {\n            color: \"blue.300\",\n            fontWeight: \"bold\",\n            children: \"No Videos \\uD83D\\uDE15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(chakra.p, {\n            color: bg3,\n            fontSize: \"sm\",\n            children: \"You haven't translated any videos yet!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(VideoTable, \"oGe3vxzQmI4amMWRQgm103lk61Y=\");\n\n_c = VideoTable;\nexport default VideoTable; //   const classes = useStyles();\n//   return (\n//     <Flex bgColor=\"messenger.200\">\n//       <TableContainer component={Paper}>\n//         <Table className={classes.table} aria-label=\"simple table\" bgColor=\"#b5def7\">\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>Video&nbsp;Title</TableCell>\n//               <TableCell align=\"right\">Original&nbsp;Video</TableCell>\n//               <TableCell align=\"right\">Translated&nbsp;Video</TableCell>\n//               <TableCell align=\"right\">Date</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {videos.map((video) => (\n//               <TableRow key={video[0]}>\n//                 <TableCell component=\"th\" scope=\"row\">\n//                   {video[0]}\n//                 </TableCell>\n//                 <TableCell align=\"right\">\n//                   <Link href={video[1]} isExternal={true}>\n//                     <Button colorScheme=\"messenger\" variant=\"outline\">\n//                       View Video\n//                     </Button>\n//                   </Link>\n//                 </TableCell>\n//                 <TableCell align=\"right\">\n//                     <VideoModal video={video[2]} title={video[0]} transcript={video[3]}/>\n//                 </TableCell>\n//                 <TableCell align=\"right\">{video[4]}</TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Flex>\n//   );\n// };\n// import {\n//   Table,\n//   Thead,\n//   Tbody,\n//   Tfoot,\n//   Tr,\n//   Th,\n//   Td,\n//   TableCaption,\n// } from \"@chakra-ui/react\";\n// <Table variant=\"striped\" colorScheme=\"teal\">\n//   <Thead>\n//     <Tr>\n//       <Th>Video Title</Th>\n//       <Th>Original Video</Th>\n//       <Th>Translated Video</Th>\n//       <Th>Date</Th>\n//     </Tr>\n//   </Thead>\n//   {videos.map((video) => (\n//     <Tbody>\n//       <Tr>\n//         <Td>{video[0]}</Td>\n//       </Tr>\n//       <Tr>\n//         <Td>\n//           <Link href={video[1]} isExternal={true}>\n//             <Button colorScheme=\"messenger\" variant=\"outline\">\n//               View Video\n//             </Button>\n//           </Link>\n//         </Td>\n//       </Tr>\n//       <Tr>\n//         <Td>\n//           <VideoModal video={video[2]} title={video[0]} transcript={video[3]} />\n//         </Td>\n//       </Tr>\n//       <Tr>\n//         <Td>\n//           <TableCell align=\"right\">{video[4]}</TableCell>\n//         </Td>\n//       </Tr>\n//     </Tbody>\n//   ))}\n// </Table>\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoTable\");","map":{"version":3,"sources":["C:/Users/t/Sharp/src/components/VideoTable.js"],"names":["React","makeStyles","TableBody","TableContainer","TableHead","TableRow","TablePagination","Paper","Flex","Button","Link","VideoModal","useState","useEffect","axios","firebase","Table","Thead","Tbody","Tfoot","Tr","Th","Td","TableCaption","Box","Text","Heading","chakra","Icon","BsLightningFill","NotesModal","bg1","bg2","bg3","VideoTable","videos","posts","setPosts","dates","setDates","currentLikes","setCurrentLikes","currentVideos","setCurrentVideos","categories","setCategories","videoTitles","setVideoTitles","user_token","auth","currentUser","getIdToken","user","header","token","email","post","then","res","fetch","credentials","response","json","data","reverse","videoNotePairs","i","length","x","push","map","video"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Flex } from \"@chakra-ui/layout\";\nimport { Button, Link } from \"@chakra-ui/react\";\nimport { VideoModal } from \"./VideoModal\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport firebase from \"firebase\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Box,\n  Text,\n  Heading,\n} from \"@chakra-ui/react\";\nimport { chakra, Icon } from \"@chakra-ui/react\";\n\nimport { BsLightningFill } from \"react-icons/bs\";\nimport { NotesModal } from \"./NotesModal\";\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 500,\n//   },\n// });\n\nconst bg1 = \"gray.800\";\nconst bg2 = \"red.400\";\nconst bg3 = \"gray.200\";\n\nexport const VideoTable = ({ videos }) => {\n  let [posts, setPosts] = useState([]);\n  let [dates, setDates] = useState([]);\n  let [currentLikes, setCurrentLikes] = useState([]);\n  let [currentVideos, setCurrentVideos] = useState([]);\n  let [categories, setCategories] = useState([]);\n  let [videoTitles, setVideoTitles] = useState([]);\n  let user_token = firebase.auth().currentUser.getIdToken();\n\n  let user = {\n    header: \"Access-Control-Allow-Origin\",\n    token: user_token,\n    email: firebase.auth().currentUser.email,\n  };\n\n  useEffect(() => {\n    axios.post(\"http://localhost:5000/home\", user).then((res) => {\n      fetch(\"http://localhost:5000/get-posts\", { credentials: \"include\" }).then(\n        (response) => {\n          response.json().then((data) => {\n            setPosts(data.data[0].reverse());\n            setDates(data.data[1].reverse());\n            setCurrentLikes(data.data[2].reverse());\n            setCategories(data.data[3].reverse());\n            setVideoTitles(data.data[4].reverse());\n            setCurrentVideos(data.data[5].reverse());\n          });\n        }\n      );\n    });\n  }, []);\n\n  let videoNotePairs = [];\n  for (let i = 0; i < posts.length; i++) {\n    let x = [\n      posts[i],\n      dates[i],\n      currentLikes[i],\n      categories[i],\n      videoTitles[i],\n    ];\n    videoNotePairs.push(x);\n  }\n  if (videos.length > 0) {\n    return (\n      <Box bgColor=\"white\">\n        <Table variant=\"striped\" colorScheme=\"linkedin\">\n          <Thead>\n            <Tr>\n              <Th>\n                <Text fontSize=\"md\" fontWeight=\"bold\">\n                  Video Title\n                </Text>\n              </Th>\n              <Th>\n                <Text fontSize=\"md\" fontWeight=\"bold\">\n                  Original Video\n                </Text>\n              </Th>\n              <Th>\n                <Text fontSize=\"md\" fontWeight=\"bold\">\n                  Translated Video\n                </Text>\n              </Th>\n              <Th>\n                <Text fontSize=\"md\" fontWeight=\"bold\">\n                  Notes\n                </Text>\n              </Th>\n              <Th>\n                <Text fontSize=\"md\" fontWeight=\"bold\">\n                  Date\n                </Text>\n              </Th>\n            </Tr>\n          </Thead>\n          {videos.map((video) => (\n            <Tbody>\n              <Tr>\n                <Td>{video[0]}</Td>\n                <Td>\n                  <Link href={video[1]} isExternal={true}>\n                    <Button colorScheme=\"facebook\" variant=\"solid\">\n                      View Video\n                    </Button>\n                  </Link>\n                </Td>\n                <Td>\n                  <VideoModal\n                    video={video[2]}\n                    title={video[0]}\n                    transcript={video[3]}\n                    summary={video[5]}\n                  />\n                </Td>\n                <Td>\n                  <NotesModal groups={videoNotePairs} videoTitle={video[0]} />\n                </Td>\n                <Td>{video[4]}</Td>\n              </Tr>\n            </Tbody>\n          ))}\n        </Table>\n      </Box>\n    );\n  } else {\n    return (\n      <Flex\n        maxW=\"sm\"\n        w=\"full\"\n        mx=\"auto\"\n        bg={bg1}\n        shadow=\"md\"\n        rounded=\"lg\"\n        overflow=\"hidden\"\n      >\n        <Flex justifyContent=\"center\" alignItems=\"center\" w={12} bg=\"blue.500\">\n          <Icon as={BsLightningFill} color=\"white\" boxSize={6} />\n        </Flex>\n\n        <Box mx={-3} py={2} px={4}>\n          <Box mx={3}>\n            <chakra.span color=\"blue.300\" fontWeight=\"bold\">\n              No Videos 😕\n            </chakra.span>\n            <chakra.p color={bg3} fontSize=\"sm\">\n              You haven't translated any videos yet!\n            </chakra.p>\n          </Box>\n        </Box>\n      </Flex>\n    );\n  }\n};\n\nexport default VideoTable;\n\n//   const classes = useStyles();\n\n//   return (\n//     <Flex bgColor=\"messenger.200\">\n//       <TableContainer component={Paper}>\n//         <Table className={classes.table} aria-label=\"simple table\" bgColor=\"#b5def7\">\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>Video&nbsp;Title</TableCell>\n//               <TableCell align=\"right\">Original&nbsp;Video</TableCell>\n//               <TableCell align=\"right\">Translated&nbsp;Video</TableCell>\n//               <TableCell align=\"right\">Date</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {videos.map((video) => (\n//               <TableRow key={video[0]}>\n//                 <TableCell component=\"th\" scope=\"row\">\n//                   {video[0]}\n//                 </TableCell>\n//                 <TableCell align=\"right\">\n//                   <Link href={video[1]} isExternal={true}>\n//                     <Button colorScheme=\"messenger\" variant=\"outline\">\n//                       View Video\n//                     </Button>\n//                   </Link>\n//                 </TableCell>\n//                 <TableCell align=\"right\">\n//                     <VideoModal video={video[2]} title={video[0]} transcript={video[3]}/>\n//                 </TableCell>\n//                 <TableCell align=\"right\">{video[4]}</TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Flex>\n//   );\n// };\n\n// import {\n//   Table,\n//   Thead,\n//   Tbody,\n//   Tfoot,\n//   Tr,\n//   Th,\n//   Td,\n//   TableCaption,\n// } from \"@chakra-ui/react\";\n\n// <Table variant=\"striped\" colorScheme=\"teal\">\n//   <Thead>\n//     <Tr>\n//       <Th>Video Title</Th>\n//       <Th>Original Video</Th>\n//       <Th>Translated Video</Th>\n//       <Th>Date</Th>\n//     </Tr>\n//   </Thead>\n//   {videos.map((video) => (\n//     <Tbody>\n//       <Tr>\n//         <Td>{video[0]}</Td>\n//       </Tr>\n//       <Tr>\n//         <Td>\n//           <Link href={video[1]} isExternal={true}>\n//             <Button colorScheme=\"messenger\" variant=\"outline\">\n//               View Video\n//             </Button>\n//           </Link>\n//         </Td>\n//       </Tr>\n//       <Tr>\n//         <Td>\n//           <VideoModal video={video[2]} title={video[0]} transcript={video[3]} />\n//         </Td>\n//       </Tr>\n//       <Tr>\n//         <Td>\n//           <TableCell align=\"right\">{video[4]}</TableCell>\n//         </Td>\n//       </Tr>\n//     </Tbody>\n//   ))}\n// </Table>\n"]},"metadata":{},"sourceType":"module"}