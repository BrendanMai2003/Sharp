{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t\\\\Sharp\\\\src\\\\components\\\\NotesModal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, useDisclosure } from \"@chakra-ui/react\";\nimport { Post } from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NotesModal = ({\n  groups,\n  videoTitle\n}) => {\n  _s();\n\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  let posts = [];\n\n  for (let i = 0; i < groups.length; i++) {\n    if (groups[i][4] === videoTitle) {\n      posts.push([groups[i][0], groups[i][1], groups[i][2], groups[i][3]]);\n    }\n  }\n\n  const btnRef = React.useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: onOpen,\n      colorScheme: \"facebook\",\n      variant: \"solid\",\n      children: \"Open Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: onClose,\n      finalFocusRef: btnRef,\n      isOpen: isOpen,\n      scrollBehavior: \"inside\",\n      size: \"xl\",\n      isCentered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NotesModal, \"O6IopkzzssCTT7bqNVIT0GeQ5us=\", false, function () {\n  return [useDisclosure];\n});\n\n_c = NotesModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesModal\");","map":{"version":3,"sources":["C:/Users/t/Sharp/src/components/NotesModal.js"],"names":["React","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","useDisclosure","Post","NotesModal","groups","videoTitle","isOpen","onOpen","onClose","posts","i","length","push","btnRef","useRef","map","post"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,SANF,EAOEC,gBAPF,EAQEC,MARF,EASEC,aATF,QAUO,kBAVP;AAWA,SAASC,IAAT,QAAqB,QAArB;;;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA4B;AAAA;;AACpD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,MAA8BP,aAAa,EAAjD;AAEA,MAAIQ,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,MAAM,CAACO,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,QAAIN,MAAM,CAACM,CAAD,CAAN,CAAU,CAAV,MAAiBL,UAArB,EAAiC;AAC/BI,MAAAA,KAAK,CAACG,IAAN,CAAW,CAACR,MAAM,CAACM,CAAD,CAAN,CAAU,CAAV,CAAD,EAAeN,MAAM,CAACM,CAAD,CAAN,CAAU,CAAV,CAAf,EAA6BN,MAAM,CAACM,CAAD,CAAN,CAAU,CAAV,CAA7B,EAA2CN,MAAM,CAACM,CAAD,CAAN,CAAU,CAAV,CAA3C,CAAX;AACD;AACF;;AACD,QAAMG,MAAM,GAAGrB,KAAK,CAACsB,MAAN,EAAf;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEP,MAAjB;AAAyB,MAAA,WAAW,EAAC,UAArC;AAAgD,MAAA,OAAO,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,KAAD;AACE,MAAA,OAAO,EAAEC,OADX;AAEE,MAAA,aAAa,EAAEK,MAFjB;AAGE,MAAA,MAAM,EAAEP,MAHV;AAIE,MAAA,cAAc,EAAC,QAJjB;AAKE,MAAA,IAAI,EAAC,IALP;AAME,MAAA,UAAU,MANZ;AAAA,8BAQE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,YAAD;AAAA,gCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAA,oBACGG,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF,eAQE,QAAC,WAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,WAAW,EAAC,MAApB;AAA2B,YAAA,EAAE,EAAE,CAA/B;AAAkC,YAAA,OAAO,EAAER,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AA8BD,CAxCM;;GAAML,U;UACyBF,a;;;KADzBE,U","sourcesContent":["import React from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { Post } from \"./Post\";\n\nexport const NotesModal = ({ groups, videoTitle }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  let posts = [];\n  for (let i = 0; i < groups.length; i++) {\n    if (groups[i][4] === videoTitle) {\n      posts.push([groups[i][0], groups[i][1], groups[i][2], groups[i][3]]);\n    }\n  }\n  const btnRef = React.useRef();\n  return (\n    <>\n      <Button onClick={onOpen} colorScheme=\"facebook\" variant=\"solid\">\n        Open Notes\n      </Button>\n\n      <Modal\n        onClose={onClose}\n        finalFocusRef={btnRef}\n        isOpen={isOpen}\n        scrollBehavior=\"inside\"\n        size=\"xl\"\n        isCentered\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Notes</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {posts.map((post) => (\n              <Post post={post} />\n            ))}\n          </ModalBody>\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}